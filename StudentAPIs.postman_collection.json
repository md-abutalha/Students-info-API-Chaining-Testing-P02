{
	"info": {
		"_postman_id": "c86e1e3d-627a-49d0-938b-1a94b31dabcd",
		"name": "StudentAPIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37041522"
	},
	"item": [
		{
			"name": "Get Single Student Data",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Student Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed the failing test for 'Test Array Properties' by checking if jsonData is an array and adjusting the assertion for student courses\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Length header is correct\", () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Length')).to.eql(\"831\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test Array Properties\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    if (Array.isArray(jsonData) && jsonData.length > 0) {\r",
							"        jsonData.forEach(student => {\r",
							"            pm.expect(student.course).to.include(\"Java\");\r",
							"            pm.expect(student.course).to.include(\"Selenium\");\r",
							"        });\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Value of last name is 'Smith'\", () => {\r",
							"    var jsonData = pm.response.json();\r",
							"    jsonData.forEach(student => {\r",
							"        pm.expect(student.last_name).to.eql(\"Smith\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Value of last name is: Smith\", () => {\r",
							"    var jsonData = pm.response.json();\r",
							"    var students = jsonData.filter(student => student.id === \"3\");\r",
							"\r",
							"    pm.expect(students.length).to.be.at.least(1); \r",
							"    var student = students[0];\r",
							"\r",
							"    pm.expect(student).to.be.an(\"object\");\r",
							"    pm.expect(student.first_name).to.eql(\"Jane\");\r",
							"    pm.expect(student.last_name).to.eql(\"Smith\");\r",
							"    pm.expect(student.phone_number).to.eql(\"0987654321\");\r",
							"    pm.expect(student.course[0]).to.eql(\"Java\");\r",
							"    pm.expect(student.course[1]).to.eql(\"Selenium\");\r",
							"});\r",
							"//json schema validation\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"first_name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"last_name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"phone_number\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"course\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {\r",
							"        \"type\": \"string\"\r",
							"      }\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"first_name\",\r",
							"    \"last_name\",\r",
							"    \"phone_number\",\r",
							"    \"course\"\r",
							"  ]\r",
							"};\r",
							"\r",
							"pm.test(\"Json Schema Validate\", () => {\r",
							"  var jsonData = pm.response.json(); \r",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Student",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"first_name\": \"Abu\",\r\n        \"last_name\": \"Sayes\",\r\n        \"phone_number\": \"0892989234\",\r\n        \"email\": \"abusaye@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Student",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"Abu\",\r\n    \"last_name\": \"Sayed\",\r\n    \"phone_number\": \"0987654321\",\r\n    \"email\": \"jane.smith@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students/d327",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"d327"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Single Data",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"5"
					]
				}
			},
			"response": []
		}
	]
}